[
 {
  "add_total_row": 0,
  "columns": [],
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Report",
  "filters": [
   {
    "default": null,
    "fieldname": "site",
    "fieldtype": "Link",
    "label": "Site",
    "mandatory": 0,
    "options": "Site",
    "parent": "Internal Audit Report",
    "parentfield": "filters",
    "parenttype": "Report",
    "wildcard_filter": 0
   },
   {
    "default": null,
    "fieldname": "department",
    "fieldtype": "Link",
    "label": "Department",
    "mandatory": 0,
    "options": "Department",
    "parent": "Internal Audit Report",
    "parentfield": "filters",
    "parenttype": "Report",
    "wildcard_filter": 0
   }
  ],
  "is_standard": "No",
  "javascript": null,
  "json": null,
  "letter_head": null,
  "modified": "2024-04-30 17:32:14.902947",
  "module": "Internal Audit Planner",
  "name": "Internal Audit Report",
  "prepared_report": 0,
  "query": null,
  "ref_doctype": "Internal Audit Details",
  "reference_report": null,
  "report_name": "Internal Audit Report",
  "report_script": "columns = [\n    {\"label\": _(\"<b>Department</b>\"), \"fieldname\": \"department\", \"fieldtype\": \"Data\", \"width\": 180},\n    {\"label\": _(\"<b>Status</b>\"), \"fieldname\": \"status\", \"fieldtype\": \"Data\", \"width\": 100},\n    {\"label\": _(\"<b>Planned Date</b>\"), \"fieldname\": \"planned_date\", \"fieldtype\": \"Data\", \"width\": 120},\n    {\"label\": _(\"<b>Actual Date</b>\"), \"fieldname\": \"actual_date\", \"fieldtype\": \"Data\", \"width\": 150},\n    {\"label\": _(\"<b>Planned Time</b>\"), \"fieldname\": \"planned_time\", \"fieldtype\": \"Data\", \"width\": 150},\n    {\"label\": _(\"<b>Actual Time</b>\"), \"fieldname\": \"actual_time\", \"fieldtype\": \"Data\", \"width\": 150},\n    {\"label\": _(\"<b>Auditees</b>\"), \"fieldname\": \"auditees\", \"fieldtype\": \"Data\", \"width\": 175},\n    {\"label\": _(\"<b>Auditors</b>\"), \"fieldname\": \"auditors\", \"fieldtype\": \"Data\", \"width\": 175},\n    {\"label\": _(\"<b>ID</b>\"), \"fieldname\": \"id\", \"fieldtype\": \"Link\", \"options\":\"Internal Audit Details\", \"width\": 120},\n]\nsite = filters.get(\"site\")\ndepartment = filters.get(\"department\")\n\nexpense_filters = {\n    \"docstatus\": [\"!=\", 2]\n}\nif site:\n    expense_filters[\"site\"] = site\nif department:\n    expense_filters[\"department\"] = department\n    \n    \naudit_details = frappe.get_all(\"Internal Audit Details\", filters=expense_filters,order_by=\"audit_start_date ASC\")\n\nsites = set()\ndata = []\nplanned_auditees = set()\nplanned_auditors = set()\nauditees = set()\nauditors = set()\nauditees2 = set()\n\nfor detail in audit_details:\n    planned_auditees.clear()\n    planned_auditors.clear()\n    auditees.clear()\n    auditors.clear()\n    \n    audit_doc = frappe.get_doc(\"Internal Audit Details\", detail.name)\n    sites.add(audit_doc.site)\n    \n    \n    start_time = frappe.utils.format_time(audit_doc.audit_plan_start_date,\"HH:mm\")\n    end_time = frappe.utils.format_time(audit_doc.audit_plan_end_date,\"HH:mm\")\n    planned_time = f\"{start_time} to {end_time}\"\n    \n    start_time2 = frappe.utils.format_time(audit_doc.audit_start_date,\"HH:mm\")\n    end_time2 = frappe.utils.format_time(audit_doc.audit_end_date,\"HH:mm\")\n    actual_time =\"\"\n    \n    if start_time2 and end_time2:\n        actual_time = f\"{start_time2} to {end_time2}\"\n        \n        \n    planned_auditees = {auditee.employee for auditee in audit_doc.planned_auditees}\n    planned_auditors = {auditor.employee for auditor in audit_doc.planned_auditors}\n\n    auditees = {auditee for auditee in audit_doc.actual_auditees}\n    auditees2 = {auditee2.employee for auditee2 in audit_doc.actual_auditees}\n    \n    auditors = {auditor for auditor in audit_doc.actual_auditors}\n    auditors2 = {auditor.employee for auditor in audit_doc.actual_auditors}\n    actual_auditees = []\n    \n    for auditee in audit_doc.actual_auditees:\n    \n        employee_doc = frappe.get_doc(\"Company Employee\", auditee.employee)\n        full_name = employee_doc.full_name if employee_doc else auditee.employee\n       \n        if auditee.employee in planned_auditees:\n            if auditee.auditee_team_leader:\n                actual_auditees.append(f\"<span style='font-weight:bold'>{full_name}</span>\")\n            else:\n                actual_auditees.append(f\"{full_name}\")\n        else:\n            if auditee.auditee_team_leader:\n                actual_auditees.append(f\"<span style='color:green; font-weight:bold'>{full_name}</span>\")\n            else:\n                actual_auditees.append(f\"<span style='color:green'>{full_name}</span>\")\n                \n                \n    missing_auditees = set()\n    missing_auditees =  planned_auditees.difference(auditees2)\n    for employee in missing_auditees:\n        employee_doc = frappe.get_doc(\"Company Employee\", employee)\n        full_name = employee_doc.full_name if employee_doc else employee\n        if audit_doc.status == \"Completed\":\n            actual_auditees.append(f\"<span style='color:red'>{full_name} (Planned but absent)</span>\")\n        else:\n            actual_auditees.append(f\"<span>{full_name}</span>\")\n    \n             \n    actual_auditors = []\n    for auditee in audit_doc.actual_auditors:\n        employee_doc = frappe.get_doc(\"Company Employee\", auditee.employee)\n        full_name = employee_doc.full_name if employee_doc else auditee.employee\n        if auditee.employee in planned_auditors:\n            if auditee.is_auditor_team_lead:\n                actual_auditors.append(f\"<span style='font-weight:bold'>{full_name}</span>\")\n            else:\n                actual_auditors.append(f\"{full_name}\")\n        else:\n            if auditee.is_auditor_team_lead:\n                actual_auditors.append(f\"<span style='color:green; font-weight:bold'>{full_name}</span>\")\n            else:\n                actual_auditors.append(f\"<span style='color:green'>{full_name}</span>\")\n                \n    missing_auditors = set()\n    missing_auditors =  planned_auditors.difference(auditors2)\n    for employee in missing_auditors:\n        employee_doc = frappe.get_doc(\"Company Employee\", employee)\n        full_name = employee_doc.full_name if employee_doc else employee\n        if audit_doc.status == \"Completed\":\n            actual_auditors.append(f\"<span style='color:red'>{full_name} (Planned but absent)</span>\")\n        else:\n            actual_auditors.append(f\"<span>{full_name}</span>\")\n    for i in range(max(len(actual_auditees), len(actual_auditors))):\n        auditee = actual_auditees[i] if i < len(actual_auditees) else \"\"\n        auditor = actual_auditors[i] if i < len(actual_auditors) else \"\"\n        status = \"\"\n        if audit_doc.status == \"Completed\":\n            status= f\"<span style='color:green'>{audit_doc.status}</span>\"\n        else:\n            status=audit_doc.status\n        planned_date = frappe.utils.format_date(audit_doc.audit_plan_start_date,\"dd-mm-yyyy\")\n        actual_date = frappe.utils.format_date(audit_doc.audit_start_date,\"dd-mm-yyyy\")\n        if i == 0:\n            data.append({\n                'department': audit_doc.department,\n                'planned_date': planned_date,\n                'planned_time': planned_time,\n                'actual_date': actual_date,\n                'actual_time': actual_time,\n                'auditees': auditee,\n                'auditors': auditor,\n                'id': audit_doc.name,\n                'status': status\n            })\n        else:\n            department = f\"<span style='color:white'>{audit_doc.department}</span>\"\n            planned_date = f\"<span style='color:white'>{planned_date}</span>\"\n            planned_time = f\"<span style='color:white'>{planned_time}</span>\"\n            actual_date = f\"<span style='color:white'>{actual_date}</span>\"\n            actual_time = f\"<span style='color:white'>{actual_time}</span>\"\n            data.append({\n                'department': department,\n                'planned_date': planned_date,\n                'planned_time': planned_time,\n                'actual_date': actual_date,\n                'actual_date2': audit_doc.audit_start_date,\n                'actual_time': actual_time,\n                'auditees': auditee,\n                'auditors': auditor,\n                'id': \"\",\n                'status':\"\",\n            })        \n   \n\ndata = columns,data",
  "report_type": "Script Report",
  "roles": [
   {
    "parent": "Internal Audit Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "System Manager"
   }
  ]
 }
]